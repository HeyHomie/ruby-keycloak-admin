=begin
#Keycloak Admin REST API

#This is a REST API reference for the Keycloak Admin

The version of the OpenAPI document: 1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for KeycloakAdminClient::ResourceServerRepresentation
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe KeycloakAdminClient::ResourceServerRepresentation do
  let(:instance) { KeycloakAdminClient::ResourceServerRepresentation.new }

  describe 'test an instance of ResourceServerRepresentation' do
    it 'should create an instance of ResourceServerRepresentation' do
      expect(instance).to be_instance_of(KeycloakAdminClient::ResourceServerRepresentation)
    end
  end
  describe 'test attribute "allow_remote_resource_management"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "client_id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "decision_strategy"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["AFFIRMATIVE", "UNANIMOUS", "CONSENSUS"])
      # validator.allowable_values.each do |value|
      #   expect { instance.decision_strategy = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "name"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "policies"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "policy_enforcement_mode"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ENFORCING", "PERMISSIVE", "DISABLED"])
      # validator.allowable_values.each do |value|
      #   expect { instance.policy_enforcement_mode = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "resources"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "scopes"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
